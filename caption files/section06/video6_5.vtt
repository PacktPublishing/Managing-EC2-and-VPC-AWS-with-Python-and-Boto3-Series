WEBVTT

00:02.300 --> 00:09.170
So the next thing that we're going to do is we're going to associate our public subnet with the public

00:09.170 --> 00:13.790
route table that we just created for that purpose.

00:13.790 --> 00:21.220
We're going to write a method a generic method that we can use for both public and private subnets.

00:21.320 --> 00:32.930
So let's go to our BPC class and within our PC class I'm going to create a method and let's say associate

00:34.140 --> 00:41.730
subnet so we can be generic with root table just like that.

00:41.900 --> 00:51.800
And before we decide on the arguments let's check out the method signature and we can then decide and

00:52.610 --> 01:02.120
so underscore client and then of course we're going to associate root people.

01:02.120 --> 01:04.430
And here we go.

01:04.440 --> 01:10.830
So this method except the dry run argument was expecting two things.

01:10.890 --> 01:15.250
And those are subnet ID and route table ID.

01:15.340 --> 01:24.940
So let's go down and let's say subnet ID is going to be submit ID that we're going to pass very soon.

01:25.200 --> 01:31.830
And after that route table ID as our TB Id just like that.

01:32.250 --> 01:43.570
So lets also pass these arguments with the signature of our method and our TB Id just like that.

01:43.690 --> 01:47.940
And let's also have a statement as associating

01:51.360 --> 02:09.240
the subnet of so fix that typo subnet as something that Id with root table and root table is going to

02:09.240 --> 02:12.630
be our TB Id just like that.

02:14.240 --> 02:22.040
And there is also a missing print statement with our A-ball method the internet gateway with the public

02:22.040 --> 02:24.190
Croot Association.

02:24.530 --> 02:35.260
Let's also say adding room for internet gateway and internet gateway I-T

02:37.920 --> 02:47.580
two route table and the route table Id just like that.

02:47.640 --> 02:48.570
All right.

02:49.020 --> 02:57.320
So now the next thing we're going to do is we're going to call this method from our main class and let's

02:57.320 --> 03:04.700
just go down and let's just commend the thing that we're going to do.

03:04.700 --> 03:05.750
Associate

03:08.550 --> 03:12.360
subnet with root table.

03:12.430 --> 03:16.080
So in our case this subnet is going to be public.

03:16.120 --> 03:25.550
So let's just say that and let's just call the method that we just implemented associate subnet recruit

03:25.560 --> 03:26.630
table.

03:26.650 --> 03:27.610
All right.

03:27.910 --> 03:30.490
So we're going to need those things again.

03:30.610 --> 03:37.970
We're going to need the public subnet I.D. and the route table I.D. And as you can see we have Druitt

03:37.980 --> 03:45.510
table I.D. but we still don't have the public subnet I.D. So to get that.

03:45.670 --> 03:53.920
Let's go back to our both all three documentation and find the Create subnet method.

03:54.400 --> 03:55.330
And here we go.

03:56.400 --> 04:05.850
So this method is again returning a type of dictionary and the parent object is again subnet the subnet

04:05.940 --> 04:09.480
and the subnet ID is right below that.

04:09.660 --> 04:23.660
So let's just copy the subnetwork And let's go down public subnet ID equals to public subnet.

04:23.670 --> 04:24.870
Sorry about that.

04:24.870 --> 04:38.850
And public subnet response and then subnet and then the inner method or property of that method is subnet

04:38.910 --> 04:39.630
ID.

04:39.720 --> 04:47.420
So this is going to give us the public subnet ID so we can just pass that in to our.

04:48.450 --> 04:51.560
So public subnet.

04:51.600 --> 04:55.690
I t and route table ID.

04:55.910 --> 04:56.820
Here we go.

04:58.810 --> 05:07.450
So thats all there is to associate the public subnet to a root table or any subnet to simply any route

05:07.450 --> 05:08.170
table.
